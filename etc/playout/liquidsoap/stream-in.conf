# fallback, if no stream is available
streamNoise = mksafe(amplify(0.05, noise(id="net_outage")))
announce    = mksafe(single(id="error_announcer", "say:no source stream available!"))

net_outage = smooth_add(
    normal = streamNoise,
    special = switch([
        ( { 0s }, announce )
    ])
)

net_outage = audio_to_stereo(net_outage)


# set source A stream and fallback
streamA1	= input.http(id="StreamA1", "http://127.0.0.1/invalidUrl")
streamA2	= input.http(id="StreamA2", "http://127.0.0.1/invalidUrl")

streamA1	= audio_to_stereo(streamA1)
streamA2	= audio_to_stereo(streamA2)

streamA = fallback(
	id="stream fallback A1/A2",
	track_sensitive=false,
	[
		streamA1,
		streamA2,
		net_outage
	]
)

# set source B stream and fallback

streamB1    = input.http(id="StreamB1", "http://127.0.0.1/invalidUrl")
streamB2    = input.http(id="StreamB2", "http://127.0.0.1/invalidUrl")

streamB1    = audio_to_stereo(streamB1)
streamB2    = audio_to_stereo(streamB2)

streamB = fallback(
    id="stream fallback B1/B2",
    track_sensitive=false,
    [
        streamB1,
        streamB2,
        net_outage
    ]
)

